/// Noughts and crosses at 45mm
pub const NOUGHTS_AND_CROSSES_MODEL: &[(&str, [f64; 3])] = &[
    ("0 bl game", [1.0, 0.0, 2.0]),
    ("1 tl game", [0.0, 0.0, 93.0]),
    ("2 tr game", [108.0, 0.0, 90.0]),
    ("3 br game", [108.0, 0.0, 2.0]),
    ("4 bl text", [0., 106.0, 2.0]),
    ("5 tl text", [0., 105.0, 89.0]),
];
pub const NAC_4V3A6040: &[(&str, isize, isize)] = &[
    ("0 bl game", 3185, 3758),
    ("1 tl game", 3154, 1550),
    ("2 tr game", 4955, 1188),
    ("3 br game", 4879, 3085),
    ("4 bl text", 1548, 1205),
    ("5 tl text", 1673, 3089),
];
pub const NAC_4V3A6041: &[(&str, isize, isize)] = &[
    ("0 bl game", 3120, 4023),
    ("1 tl game", 3334, 1927),
    ("2 tr game", 6189, 1514),
    ("3 br game", 5807, 3511),
    ("4 tl text", 2641, 407),
    ("5 bl text", 2433, 2388),
];
pub const NAC_4V3A6042: &[(&str, isize, isize)] = &[
    ("0 bl game", 4478, 3903),
    ("1 tl game", 3738, 1896),
    ("2 tr game", 4161, 396),
    //     ("3 br game", ()),
    ("4 tl text", 903, 2426),
    ("5 bl text", 1868, 4205),
];
pub const N_AND_X_TEST_INF: &[(&str, [f64; 3])] = &[
    ("0", [0., 0., 0.]),
    ("1", [108., 0., 0.]),
    ("2", [0., 109., 0.]),
    ("3", [0., 0., 92.]),
    ("4", [108., 0., 92.]),
    ("5", [0., 109., 92.]),
    ("6", [108., 109., 0.]),
];
pub const N_AND_X_TEST_INF_DATA: &[(&str, isize, isize)] = &[
    ("0", 3259, 2330),
    ("1", 4854, 1646),
    ("2", 2375, 1182),
    ("3", 3257, 3331),
    ("4", 4675, 2659),
    ("5", 2447, 2219),
    ("6", 3877, 646),
];
pub const C50MM_STI_POLY: &[f64] = &[
    8.283213378490473e-5,
    1.0010373675395385,
    -0.27346884785220027,
    3.037436155602336,
    -13.196169488132,
    26.7261453717947,
    -19.588972344994545,
];
pub const C50MM_ITS_POLY: &[f64] = &[
    -7.074450991240155e-5,
    0.9983717333234381,
    0.2834468421060592,
    -3.112550737336278,
    13.483235448598862,
    -27.340132132172585,
    20.28454799950123,
];

//a Old
/// Y axis for Y = -2, -1, 0, 1, 2
pub const MODEL_ORIGIN: [f64; 3] = [0., 0., 0.];
pub const MODEL_Y_AXIS: [[f64; 3]; 4] = [
    [0., -100., 0.],
    [0., -50., 0.],
    [0., 50., 0.],
    [0., 100., 0.],
];

/// X axis for X = -1, 0, 1, 2
pub const MODEL_X_AXIS: [[f64; 3]; 3] = [[-100., 0., 0.], [100., 0., 0.], [200., 0., 0.]];

pub const C0_DATA_ALL: [([f64; 3], [f64; 2]); 8] = [
    (MODEL_Y_AXIS[0], [374.591667, 300.550000]),
    (MODEL_Y_AXIS[1], [374.120000, 224.720000]),
    (MODEL_ORIGIN, [375.580000, 156.230000]),
    (MODEL_Y_AXIS[2], [375.598592, 86.098592]),
    (MODEL_Y_AXIS[3], [375.085366, 21.048780]),
    (MODEL_X_AXIS[0], [231.333333, 129.294118]),
    // (MODEL_ORIGIN[2], [375.580000, 156.230000]),
    (MODEL_X_AXIS[1], [504.053398, 175.679612]),
    (MODEL_X_AXIS[2], [619.271084, 195.301205]),
];

pub const C0_DATA: [([f64; 3], [f64; 2]); 4] = [
    (MODEL_Y_AXIS[0], [374.591667, 300.550000]),
    (MODEL_Y_AXIS[3], [375.085366, 21.048780]),
    (MODEL_X_AXIS[0], [231.333333, 129.294118]),
    (MODEL_X_AXIS[2], [619.271084, 195.301205]),
];

// from callibrate/log1.txt line 31
// (1,      1726123,[(0,424.000000,91.000000);(0,321.700000,91.960000);(0,318.175497,92.271523);(0,238.000000,94.000000);(0,239.000000,120.500000);(0,308.706897,192.000000);(0,309.320000,242.380000);(0,408.342105,243.631579);(0,502.091837,290.224490);(0,407.583333,291.666667);(0,206.767857,294.571429);(0,309.311594,293.362319);(0,308.079545,339.965909);(0,308.738095,387.873016);];

// 424.000000,91.000000
// 321.700000,91.960000
// 318.175497,92.271523
// 238.000000,94.000000
// 239.000000,120.500000
// 308.706897,192.000000
// 309.320000,242.380000
// 408.342105,243.631579
// 502.091837,290.224490
// 407.583333,291.666667
// 206.767857,294.571429
// 309.311594,293.362319
// 308.079545,339.965909
// 308.738095,387.873016

// Sorted by X
// 206.767857,294.571429
// 238.000000,94.000000
// 239.000000,120.500000
// 308.706897,192.000000
// 309.320000,242.380000
// 309.311594,293.362319
// 308.079545,339.965909
// 308.738095,387.873016
// 318.175497,92.271523
// 321.700000,91.960000
// 502.091837,290.224490
// 407.583333,291.666667
// 408.342105,243.631579
// 424.000000,91.000000

// Extract Y axis
// 308.706897,192.000000
// 309.320000,242.380000
// 309.311594,293.362319 (origin)
// 308.079545,339.965909
// 308.738095,387.873016
// others
// 206.767857,294.571429
// 238.000000,94.000000
// 239.000000,120.500000
// 318.175497,92.271523
// 321.700000,91.960000
// 502.091837,290.224490
// 407.583333,291.666667
// 408.342105,243.631579
// 424.000000,91.000000

// Others sorted by Y
// 424.000000,91.000000
// 321.700000,91.960000
// 318.175497,92.271523
// 238.000000,94.000000
// 239.000000,120.500000
// 502.091837,290.224490
// 407.583333,291.666667
// 408.342105,243.631579
// 206.767857,294.571429

// Extract X axis - they have same Y as middle Y (origin)
// 502.091837,290.224490
// 407.583333,291.666667
// 206.767857,294.571429

// Resolve data
// Origin:
// 309.311594,293.362319
// Y:
// 308.706897,192.000000
// 309.320000,242.380000
// 308.079545,339.965909
// 308.738095,387.873016
// X:
// 206.767857,294.571429
// 407.583333,291.666667
// 502.091837,290.224490

pub const C1_DATA_ALL: [([f64; 3], [f64; 2]); 8] = [
    (MODEL_Y_AXIS[0], [308.738095, 387.873016]),
    (MODEL_Y_AXIS[1], [308.079545, 339.965909]),
    (MODEL_ORIGIN, [309.311594, 293.362319]),
    (MODEL_Y_AXIS[2], [309.320000, 242.380000]),
    (MODEL_Y_AXIS[3], [308.706897, 192.000000]),
    (MODEL_X_AXIS[0], [206.767857, 294.571429]),
    // (MODEL_ORIGIN[2], [309.311594, 293.362319]),
    (MODEL_X_AXIS[1], [407.583333, 291.666667]),
    (MODEL_X_AXIS[2], [502.091837, 290.224490]),
];
